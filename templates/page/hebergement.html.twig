{% extends "base.html.twig" %}
{% block title %}
	Hébergement
{% endblock %}

{% block stylesheets %}
	<link rel="stylesheet" href="{{ asset('css/dashboard.css')}}">
{% endblock %}
{% block body %}

	<section
		id="contents" class="container-fluid">
		<!-- entete content -->
			{% include "nav2.html.twig" %}
		<!-- / entete content -->

		<!-- contenue  -->
		<div id="hrs_content">
			<div>
				<div class="col-lg-12 col-md-12 col-sm-12 col-sm-12 col-xs-12">
					<section class="section_part" id="section_part_top">
						<div class="sous_titre">
							<h3>Hébergement</h3>
						</div>
					</section>
				</div>
				<div
					class="col-lg-12 col-md-12 col-sm-12 col-sm-12 col-xs-12"
					
					{% if app.user.receptionniste == "oui" %}
						style = "display : none;"
					{% endif %}
					>
					<!-- debut chart 1 -->
					<section class="section_part tab_content margin_tab graph_content">
						<div class="chart_title">
							<div class="chart_title-part">
								<h4>Taux d'occupation</h4>
							</div>
							<form action="" class="tri">
								<select name="" id="mois_heb_to">
									<option selected="selected" value="tous_les_mois">Tous les mois</option>
									<option value="01">Janvier</option>
									<option value="02">Février</option>
									<option value="03">Mars</option>
									<option value="04">Avril</option>
									<option value="05">Mai</option>
									<option value="06">Juin</option>
									<option value="07">Juillet</option>
									<option value="08">Août</option>
									<option value="09">Septembre</option>
									<option value="10">Octobre</option>
									<option value="11">Novembre</option>
									<option value="12">Décembre</option>
								</select>
								<select name="" class="annee" id="annee_heb_to">
									{% for a in tab_annee %}
										<option value="{{ a }}">{{ a }}</option>
									{% endfor %}
								</select>
							</form>
						</div>
						{# <section class = "load_canvas_to"><p>Patienter ...</p></section> #}
						<section>
							<div id="element_canvas_heb_to">

								<div>
									<canvas id="canvas_to"></canvas>
								</div>
								<div style = "opacity : 0 !important" id="chart-legends_to"></div>
							</div>
						</section>

					</section>
					<!-- fin chart 1 -->
					<!-- debut chart 2 -->
					<section class="section_part tab_content margin_tab graph_content"
					
					{% if app.user.receptionniste == "oui" %}
						style = "display : none;"
					{% endif %}
					>
						<div class="chart_title">
							<div class="chart_title-part">
								<h4>Chiffre d'affaire</h4>
							</div>
							<form action="" class="tri">
								<select name="" id="mois_heb_ca">
									<option selected="selected" value="tous_les_mois">Tous les mois</option>
									<option value="01">Janvier</option>
									<option value="02">Février</option>
									<option value="03">Mars</option>
									<option value="04">Avril</option>
									<option value="05">Mai</option>
									<option value="06">Juin</option>
									<option value="07">Juillet</option>
									<option value="08">Août</option>
									<option value="09">Septembre</option>
									<option value="10">Octobre</option>
									<option value="11">Novembre</option>
									<option value="12">Décembre</option>
								</select>
								<select name="" class="annee" id="annee_heb_ca">
									{% for a in tab_annee %}
										<option value="{{ a }}">{{ a }}</option>
									{% endfor %}
								</select>
							</form>
						</div>

						<section>
							<div id="element_canvas_heb_ca">
								<div>
									<canvas id="canvas_ca"></canvas>
								</div>
								<div style = "opacity : 0 !important" id="chart-legends_ca"></div>
							</div>
						</section>

					</section>
					<!-- fin chart2  -->
					{# chart 3 #}

					<section class="section_part tab_content margin_tab graph_content"
					
					{% if app.user.receptionniste == "oui" %}
						style = "display : none;"
					{% endif %}
					>
						<div class="chart_title">
							<div class="chart_title-part">
								<h4>Pax hébergé et Nombre de chambre occupé</h4>
							</div>
							<form action="" class="tri">
								<select name="" id="mois_pax">
									<option selected="selected" value="tous_les_mois">Tous les mois</option>
									<option value="01">Janvier</option>
									<option value="02">Février</option>
									<option value="03">Mars</option>
									<option value="04">Avril</option>
									<option value="05">Mai</option>
									<option value="06">Juin</option>
									<option value="07">Juillet</option>
									<option value="08">Août</option>
									<option value="09">Septembre</option>
									<option value="10">Octobre</option>
									<option value="11">Novembre</option>
									<option value="12">Décembre</option>
								</select>
								<select name="" class="annee" id="annee_pax">
									{% for a in tab_annee %}
										<option value="{{ a }}">{{ a }}</option>
									{% endfor %}
								</select>
							</form>
						</div>

						<section>
							<div id="element_canvas_pax">
								<div>
									<canvas id="canvas_pax"></canvas>
								</div>
								<div id="chart-legends_pax"></div>
							</div>
						</section>

					</section>

					{# fin chart 3 #}

					{# debut chart 4 #}
					<section class="section_part tab_content margin_tab graph_content"
					
					{% if app.user.receptionniste == "oui" %}
						style = "display : none;"
					{% endif %}
					>
						<div class="chart_title">
							<div class="chart_title-part">
								<h4>KPI</h4>
							</div>
							<form action="" class="tri">
								<select name="" class="annee" id="annee_kpi">
									{% for a in year_mens %}
										{% if annee == a %}
											<option value="{{ a }}" selected >{{ a }}</option>
										{% else %}
											<option value="{{ a }}">{{ a }}</option>
										{% endif %} 
									{% endfor %}
								</select>
							</form>
						</div>

						<section>
							<div id="element_canvas_KPI">
								<div>
									<canvas id="canvas_KPI"></canvas>
								</div>
								<div id="chart-legends_KPI"></div>
							</div>
						</section>

					</section>
					{# fin chart 4 #}


				</div>
				<div class="col-lg-8 col-md-8 col-sm-12 col-sm-12 col-xs-12">
					<section class="section_part tab_content margin_tab tab_liste_client">
						<div class="tableau">
							<div class="sous_titre">
								{% if date_text_month is defined %}
									<h4>Liste des clients hébergés le : <span id="date_text_heb">{{ date_text_month }}</span></h4>
								{% endif %}
								{% if interval_text_date is defined  %}
									<h4>Liste des clients hébergés entre <span>{{ interval_text_date }}</span></h4>
								{% endif %}
							</div>
							<section class=" filtre">
								<div class="sous_titre_filtre">
									<h3>Filtre</h3>
								</div>
								<form class="tri" id="form_tri_tab_heb" action="{{ path('hebergement', { 'pseudo_hotel' : hotel }) }}" method="POST">
									<input name="date1" type="date" id="date1" {% if date1 is defined %} value="{{ date1 }}" {% endif %}>
									<input type="date" name="date2" id="date2" {% if date2 is defined %} value="{{ date2 }}" {% endif %}>
									<button type="submit" class="btn btn-primary btn-xs btn_filter">
										<span>Filtrer</span>
									</button>
								</form>
							</section>
							<div class="tableau tab_historique">
								<table class="display" id="tab_client_heb" style="width:100%">
									<thead>
										<tr>
											<td>
												<span>NOM</span>
											</td>
											<td>
												<span>DATE D'ARRIVEE</span>
											</td>
											<td>
												<span>DATE DE DEPART</span>
											</td>
											<td>
												<span>DUREE DU SEJOUR</span>
											</td>
											<td><span>ACTIONS</span></td>
										</tr>
									</thead>
									<tbody id="tbody_load">
										{% if items is empty%}
										{% else %}
											{% for item in items %}
												<tr>

													<td>
														<span>{{ item.nom }}
															<br>
															{% if item.prenom is defined %}
																{{ item.prenom }}
															{% endif %}
														</span>
													</td>
													<td>
														<span>{{ item.getDateArrivee() | date('d-m-Y') }}</span>
													</td>
													<td>
														<span>{{ item.getDateDepart() | date('d-m-Y') }}</span>
													</td>
													<td>
														<span>{{ item.getDureeSejour() }}</span>
													</td>
													<td class="td__actions">
														<a href="#" data-target="#modal_form" class = "btn_client_modif" data-id = "{{ item.getId() }}"> 
															<span class="fa fa-edit"></span>
														</a>
														<a href="#" data-target="#modal_form_confirme" class = "btn_client_suppr" data-id = "{{ item.getId() }}">
															<span class="fa fa-trash-o"></span>
														</a>
													</td>
												</tr>
											{% endfor %}
										{% endif %}
									</tbody>
								</table>
							</div>
							<!-- Modal modif  -->
							<div class="modal fade" id="modal_form" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
								<div class="modal-dialog opacity-animate4">
									<div class="modal-content">
										<div class="modal-header">
											<button type="button" class="close" data-dismiss="modal">&times;</button>
											<h3 class="modal-title" style="text-align: center;">Modification</h3>
										</div>
										<div class="modal-body modal_modif_client"></div>
									</div>
								</div>
							</div>
							<!-- fin Modal modif  -->

							<!-- Modal suppr  -->

							<div class="modal fade" id="modal_form_confirme" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
								<div class="modal-dialog opacity-animate4">
									<div class="modal-content">
										<div class="modal-header">
											<button type="button" class="close" data-dismiss="modal">&times;</button>
											<h3 class="modal-title" style="text-align: center;">Voulez-vous vraiment supprimer cet élément ?</h3>
										</div>
										<div class="modal-body">
											<div id="div__conf">
												<div class="modal-body modal_suppr_client"></div>
											</div>
										</div>

									</div>
								</div>
							</div>

							<!-- fin Modal suppr  -->

						</div>
					</section>

				</div>
			</div>
		</div>
		<!-- / contenue  -->
	</section>

{% endblock %}
{% block javascripts %}

	<script>
			var my_data_to = [{% for t in tab_heb_to %} {{ t }},{% endfor %}];
	
			var my_data_ca = [{% for tca in tab_heb_ca %} {{ tca }},{% endfor %}];

			var my_data_pax = [{% for t in tab_heb_pax %} {{ t }},{% endfor %}];
			var my_data_occ = [{% for t in tab_heb_occ %} {{ t }},{% endfor %}];

			var  my_data_adr = { 0 : 0};
			var  my_data_revp = { 0 : 0};

			{% if tab_adr is not empty %}
				 my_data_adr = {{  (tab_adr|json_encode()|raw) }} ;
			{% endif %}
			
			 {% if tab_revp is not empty %}
				 my_data_revp = {{ (tab_revp|json_encode()|raw) }} ;
			 {% endif %}

		$(document).ready(function () {

			/* donnée pour les deux chart */

			// tracer
			
			var souche_adr = {
				'0' : 0,
				'1' : 0,
				'2' : 0,
				'3' : 0,
				'4' : 0,
				'5' : 0,
				'6' : 0,
				'7' : 0,
				'8' : 0,
				'9' : 0,
				'10' : 0,
				'11' : 0
			}
			for (var item in my_data_adr) {
				souche_adr[item] = my_data_adr[item];
			}
			//console.log(souche);
			var souche2_adr  = [];
			for (var item in souche_adr) {
				souche2_adr.push(souche_adr[item]);
			}

			var souche_revp = {
				'0' : 0,
				'1' : 0,
				'2' : 0,
				'3' : 0,
				'4' : 0,
				'5' : 0,
				'6' : 0,
				'7' : 0,
				'8' : 0,
				'9' : 0,
				'10' : 0,
				'11' : 0
			}
			for (var item in my_data_revp) {
				souche_revp[item] = my_data_revp[item];
			}

			//console.log(souche);
			var souche2_revp  = [];
			for (var item in souche_revp) {
				souche2_revp.push(souche_revp[item]);
			}

			var my_labels = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Sept","Oct","Nov","Dec"];

			/* fin donnée pour les deux chart */


			function create_ctx1() {
			var ctx1 = document.getElementById('canvas_to').getContext("2d");
				return ctx1;
			}

			function create_config1(data, labels, max_y, stepSize) {

				var ctx1 = create_ctx1();

				var gradientfill_1 = ctx1.createLinearGradient(0, 0, 0, 320);
				gradientfill_1.addColorStop(0, '#d29e00');
				gradientfill_1.addColorStop(1, 'transparent');

				var gradientfill_2 = ctx1.createLinearGradient(0, 0, 0, 320);
				gradientfill_2.addColorStop(0, '#55d8ff');
				gradientfill_2.addColorStop(1, 'transparent');


				var config1 = {
					type: 'line',
					data: {
						datasets: 
						[
							{
								label: "Taux d'occupation",
								fill: true,
								backgroundColor: gradientfill_1,
								borderColor: "#d29e00",
								/* insertion des données sur l'axe (oy) */
								data: data,
								// qui est un tableau simple
								/* / insertion des données sur l'axe (oy) */
								pointStyle: 'circle',
								pointBackgroundColor: "transparent",
								pointBorderWidth: '2',
								radius: '5',
								hoverRadius: '5',
								borderWidth: 2
							}
						]
					},
					options: {

						legend: {
							display: false,
							align: 'start',
							position: 'bottom'
						},
						responsive: true,
						title: {
							display: true,
							text: ''
						},
						tooltips: {
							mode: 'index',
							intersect: false
						},
						hover: {
							mode: 'nearest',
							intersect: true
						},

						scales: {

							xAxes: 
							[
								{
									type: 'category',
									labels: labels,
									// qui est un tableau simple
									/* / insertion des données sur l'axe (ox) */
									gridLines: {
										drawOnChartArea: true,
										drawTicks: false,
										color: "#f0f2f4"
									},
									ticks: {
										padding: 20, // pour le marge % axe x
										fontSize: (function () {
														var w = $(window).width();
														if (w < 769) {
															return 7;
														}
															return 10;
													})()
									}
								}
							],
							yAxes: [
								{
									gridLines: {
										drawOnChartArea: true,
										drawTicks: false,
										color: "#dddfe1"
									},
									ticks: {
										padding: 20, // pour le marge % axe y
										min: 0,
										max: max_y,
										stepSize: stepSize,
										callback: function (value) {
											return value + "%"
										}
									},

									display: true,
									scaleLabel: {
										display: true,
										labelString: ''
									}
								}
							]
						}
					}
				};

				return config1;
			}

			// fin event pour data 1

			// fin chart 1

			// debut chart  2


			function create_ctx2() {
				var ctx2 = document.getElementById('canvas_ca').getContext("2d");
				var gradientfill_1 = ctx2.createLinearGradient(0, 0, 0, 320);
				gradientfill_1.addColorStop(0, '#d29e00');
				gradientfill_1.addColorStop(1, 'transparent');
				var gradientfill_2 = ctx2.createLinearGradient(0, 0, 0, 320);
				gradientfill_2.addColorStop(0, '#55d8ff');
				gradientfill_2.addColorStop(1, 'transparent');
				return ctx2;
			}

			function create_config2(data, labels, max_y, stepSize) {

				var ctx2 = create_ctx2();

				var gradientfill_1 = ctx2.createLinearGradient(0, 0, 0, 320);
				gradientfill_1.addColorStop(0, '#d29e00');
				gradientfill_1.addColorStop(1, 'transparent');

				var gradientfill_2 = ctx2.createLinearGradient(0, 0, 0, 320);
				gradientfill_2.addColorStop(0, '#55d8ff');
				gradientfill_2.addColorStop(1, 'transparent');

				var config2 = {
					type: 'line',
					data: {
						datasets: 
						[
							{
								label: "Chiffre d'affaire",
								fill: true,
								backgroundColor: gradientfill_2,
								borderColor: "#55d8ff",

								/* insertion des données sur l'axe (oy) */

								data: data,

								/* insertion des données sur l'axe (oy) */
								pointStyle: 'circle',
								pointBackgroundColor: "transparent",
								pointBorderWidth: '2',
								radius: '5',
								hoverRadius: '5',
								borderWidth: 2
							}
						]
					},
					options: {
						legend: {
							display: false,
							align: 'start',
							position: 'bottom'

						},

					responsive: true,
					title: {
						display: true,
						text: ''
					},
					tooltips: {
						mode: 'index',
						intersect: false
					},
					hover: {
						mode: 'nearest',
						intersect: true
					},

					scales: 
					{

						xAxes: 
						[
							{
								type: 'category',

								/* insertion des données sur l'axe (ox) */

								labels: labels,
								/* /insertion des données sur l'axe (ox) */

								gridLines: {
									drawOnChartArea: true,
									drawTicks: false,
									color: "#f0f2f4"
								},

								ticks: 
								{
									padding: 20, // pour le marge % axe x
									fontSize: (function () {
										var w = $(window).width();
										if (w < 769) {
											return 7;
										}
										return 10;
									})()
								}
							}
						],
						yAxes: 
						[
							{
								gridLines: {
									drawOnChartArea: true,
									drawTicks: false,
									color: "#dddfe1"
								},
								ticks: {
									padding: 20, // pour le marge % axe y
									min : 0,
									max: max_y,
									stepSize: stepSize,

									callback: function (value) {
										var test = new Intl.NumberFormat();
										var val = test.format(value);
										return val + " Ar"
									}
								},
								display: true,
								scaleLabel: {
									display: true,
									labelString: ''
								}
							}
						]
					}
				}
			};

			return config2;
		}


		// fin chart2

		// debut chart 3

		function create_ctx3() {
			var ctx3 = document.getElementById('canvas_pax').getContext("2d");

			var gradientfill_1 = ctx3.createLinearGradient(0, 0, 0, 320);
			gradientfill_1.addColorStop(0, '#d29e00');
			gradientfill_1.addColorStop(1, 'transparent');

			var gradientfill_2 = ctx3.createLinearGradient(0, 0, 0, 320);
			gradientfill_2.addColorStop(0, '#55d8ff');
			gradientfill_2.addColorStop(1, 'transparent');

			return ctx3;
		}

		function create_config3(data1, data2, labels, max_y, stepSize) {

				var ctx3 = create_ctx3();

				var gradientfill_1 = ctx3.createLinearGradient(0, 0, 0, 320);
				gradientfill_1.addColorStop(0, '#d29e00');
				gradientfill_1.addColorStop(1, 'transparent');

				var gradientfill_2 = ctx3.createLinearGradient(0, 0, 0, 320);
				gradientfill_2.addColorStop(0, '#55d8ff');
				gradientfill_2.addColorStop(1, 'transparent');

				var config3 = {
					type: 'line',
					data: {
						datasets: 
						[
							{
								label: "Nombre de pax hébergé",
								fill: true,
								backgroundColor: gradientfill_1,
								borderColor: "#d29e00",

								/* insertion des données sur l'axe (oy) */

								data: data1,

								/* insertion des données sur l'axe (oy) */
								pointStyle: 'circle',
								pointBackgroundColor: "transparent",
								pointBorderWidth: '2',
								radius: '5',
								hoverRadius: '5',
								borderWidth: 2
							},
							{
								label: "Nombre de chambre occupé",
								fill: true,
								backgroundColor: gradientfill_2,
								borderColor: "#55d8ff",

								/* insertion des données sur l'axe (oy) */

								data: data2,

								/* insertion des données sur l'axe (oy) */
								pointStyle: 'circle',
								pointBackgroundColor: "transparent",
								pointBorderWidth: '2',
								radius: '5',
								hoverRadius: '5',
								borderWidth: 2
							}
						]
					},
					options: {
						legend: {
							display: false,
							align: 'start',
							position: 'bottom'

						},
						legendCallback: function (chart) {
							var text = [];
							text.push('<ul class="my_liste_legend ul_3">');
							for (var i = 0; i < chart.data.datasets.length; i++) {
								
								text.push('<li>');
								text.push('<span data_leg = "' + i + '" style="background-color:' + chart.data.datasets[i].borderColor + '">' + '</span><b data_leg = "' + i + '">' + chart.data.datasets[i].label + '</b>');
								text.push('</li>');
							}
							text.push('</ul>');
							return text.join("");
						},

					responsive: true,
					title: {
						display: true,
						text: ''
					},
					tooltips: {
						mode: 'index',
						intersect: false
					},
					hover: {
						mode: 'nearest',
						intersect: true
					},

					scales: 
					{

						xAxes: 
						[
							{
								type: 'category',

								/* insertion des données sur l'axe (ox) */

								labels: labels,
								/* /insertion des données sur l'axe (ox) */

								gridLines: {
									drawOnChartArea: true,
									drawTicks: false,
									color: "#f0f2f4"
								},

								ticks: 
								{
									padding: 20, // pour le marge % axe x
									fontSize: (function () {
													var w = $(window).width();
													if (w < 769) {
														return 7;
													}
													return 10;
												})()
								}
							}
						],
						yAxes: 
						[
							{
								gridLines: {
									drawOnChartArea: true,
									drawTicks: false,
									color: "#dddfe1"
								},
								ticks: {
									padding: 20, // pour le marge % axe y
									min : 0,
									max: max_y,
									stepSize: stepSize,

									// callback: function (value) {
									// 	var test = new Intl.NumberFormat();
									// 	var val = test.format(value);
									// 	return val + " Ar"
									// }
								},
								display: true,
								scaleLabel: {
									display: true,
									labelString: ''
								}
							}
						]
					}
				}
			};

			return config3;
		}

		// debut chart 4 

		function create_ctx4() {
			var ctx4 = document.getElementById('canvas_KPI').getContext("2d");

			var gradientfill_1 = ctx4.createLinearGradient(0, 0, 0, 320);
			gradientfill_1.addColorStop(0, '#d29e00');
			gradientfill_1.addColorStop(1, 'transparent');

			var gradientfill_2 = ctx4.createLinearGradient(0, 0, 0, 320);
			gradientfill_2.addColorStop(0, '#55d8ff');
			gradientfill_2.addColorStop(1, 'transparent');

			return ctx4;
		}

		function create_config4(data1, data2, labels, max_y, stepSize) {

				var ctx4 = create_ctx4();

				var gradientfill_1 = ctx4.createLinearGradient(0, 0, 0, 320);
				gradientfill_1.addColorStop(0, '#d29e00');
				gradientfill_1.addColorStop(1, 'transparent');

				var gradientfill_2 = ctx4.createLinearGradient(0, 0, 0, 320);
				gradientfill_2.addColorStop(0, '#55d8ff');
				gradientfill_2.addColorStop(1, 'transparent');

				var config4 = {
					type: 'line',
					data: {
						datasets: 
						[
							{
								label: "ADR",
								fill: true,
								backgroundColor: gradientfill_1,
								borderColor: "#d29e00",

								/* insertion des données sur l'axe (oy) */

								data: data1,

								/* insertion des données sur l'axe (oy) */
								pointStyle: 'circle',
								pointBackgroundColor: "transparent",
								pointBorderWidth: '2',
								radius: '5',
								hoverRadius: '5',
								borderWidth: 2
							},
							{
								label: "RevPAR",
								fill: true,
								backgroundColor: gradientfill_2,
								borderColor: "#55d8ff",

								/* insertion des données sur l'axe (oy) */

								data: data2,

								/* insertion des données sur l'axe (oy) */
								pointStyle: 'circle',
								pointBackgroundColor: "transparent",
								pointBorderWidth: '2',
								radius: '5',
								hoverRadius: '5',
								borderWidth: 2
							}
						]
					},
					options: {
						mode: 'index',
						intersect: false,
						legend: {
							display: false,

						},
						legendCallback: function (chart) {
							var text = [];
							text.push('<ul class="my_liste_legend ul_4">');
							for (var i = 0; i < chart.data.datasets.length; i++) {
								
								text.push('<li>');
								text.push('<span data_leg = "' + i + '" style="background-color:' + chart.data.datasets[i].borderColor + '">' + '</span><b data_leg = "' + i + '">' + chart.data.datasets[i].label + '</b>');
								text.push('</li>');
							}
							text.push('</ul>');
							return text.join("");
						},

					responsive: true,
					title: {
						display: true,
						text: ''
					},
					tooltips: {
						mode: 'index',
						intersect: false,
					},
					hover: {
						mode: 'nearest',
						intersect: true
					},

					scales: 
					{

						xAxes: 
						[
							{
								type: 'category',

								/* insertion des données sur l'axe (ox) */

								labels: labels,
								/* /insertion des données sur l'axe (ox) */

								gridLines: {
									drawOnChartArea: true,
									drawTicks: false,
									color: "#f0f2f4"
								},

								ticks: 
								{
									padding: 20, // pour le marge % axe x
									fontSize: (function () {
													var w = $(window).width();
													if (w < 769) {
														return 7;
													}
													return 10;
												})()
								}
							}
						],
						yAxes: 
						[
							{
								gridLines: {
									drawOnChartArea: true,
									drawTicks: false,
									color: "#dddfe1"
								},
								ticks: {
									padding: 20, // pour le marge % axe y
									min : 0,
									max: max_y,
									stepSize: stepSize,

									callback: function (value) {
										var test = new Intl.NumberFormat();
										var val = test.format(value);
										return val + " Ar"
									}
								},
								display: true,
								scaleLabel: {
									display: true,
									labelString: ''
								}
							}
						]
					}
				}
			};

			return config4;
		}


		// responsive pour les chart


		function create_chart1(ctx1, config1) {
			var myChart1 = new Chart(ctx1, config1);

			// pour dire qu'on va utiliser notre propre légende html fenitra
			document.getElementById('chart-legends_to').innerHTML = myChart1.generateLegend();

			// event pour data 1

			var ev_click = false;
			var tab_temp = [];
			for (var i = 0; i < myChart1.data.datasets[0].data.length; i++) { // myChart1.data.datasets[0].data[i]= -10;
				tab_temp[i] = myChart1.data.datasets[0].data[i];
			}
			$("#chart-legends_to").on('click', "li span[data_leg=0]", function () {

				if (ev_click == false) {
					$(".ul_1 li span[data_leg=0]").addClass("legende_click");
					for (var i = 0; i < myChart1.data.datasets[0].data.length; i++) {
						myChart1.data.datasets[0].data[i] = -10;
					}
					myChart1.update();
					ev_click = ! ev_click;
					// alert(ev_click) ;
				} else {
					$(".ul_1 li span[data_leg=0]").removeClass("legende_click");
					for (var i = 0; i < myChart1.data.datasets[0].data.length; i++) {
						myChart1.data.datasets[0].data[i] = tab_temp[i];
					}
					myChart1.update();
					ev_click = ! ev_click;
					// alert(ev_click) ;
				}
			});

			return myChart1;

		}

		function create_chart2(ctx2, config2) {
			var myChart2 = new Chart(ctx2, config2);

			// pour dire qu'on va utiliser notre propre légende html fenitra
			document.getElementById('chart-legends_ca').innerHTML = myChart2.generateLegend();


			// legende 2

			var ev_click2 = false;
			var tab_temp2 = [];
			for (var i = 0; i < myChart2.data.datasets[0].data.length; i++) { // myChart2.data.datasets[0].data[i]= -10;
			tab_temp2[i] = myChart2.data.datasets[0].data[i];
			}
			$("#chart-legends_ca").on('click', "li span[data_leg=0]", function () {

				if (ev_click2 == false) {
					$(".ul_2 li span[data_leg=0]").addClass("legende_click");
					for (var i = 0; i < myChart2.data.datasets[0].data.length; i++) {
						myChart2.data.datasets[0].data[i] = -10;
					}
					myChart2.update();
					ev_click2 = ! ev_click2;
					// alert(ev_click2) ;
				} else {
					$(".ul_2 li span[data_leg=0]").removeClass("legende_click");
					for (var i = 0; i < myChart2.data.datasets[0].data.length; i++) {
						myChart2.data.datasets[0].data[i] = tab_temp2[i];
					}

					myChart2.update();
					ev_click2 = ! ev_click2;

				}
			});

			return myChart2;

		}

		function create_chart3(ctx3, config3) {
			var myChart3 = new Chart(ctx3, config3);

			// pour dire qu'on va utiliser notre propre légende html fenitra
			document.getElementById('chart-legends_pax').innerHTML = myChart3.generateLegend();

			// event pour data 1

			var ev_click1 = false;
			var ev_click2 = false;
			var tab_temp = [];
			var tab_temp2 = [];
			for (var i = 0; i < myChart3.data.datasets[0].data.length; i++) { // myChart1.data.datasets[0].data[i]= -10;
				tab_temp[i] = myChart3.data.datasets[0].data[i];
			}
			for (var i = 0; i < myChart3.data.datasets[1].data.length; i++) { // myChart1.data.datasets[0].data[i]= -10;
				tab_temp2[i] = myChart3.data.datasets[1].data[i];
			}
			$("#chart-legends_pax").on('click', "li span[data_leg=0]", function () {
				if (ev_click1 == false) {
					$(".ul_3 li span[data_leg=0]").addClass("legende_click");
					for (var i = 0; i < myChart3.data.datasets[0].data.length; i++) {
						myChart3.data.datasets[0].data[i] = 0;
					}
					myChart3.update();
					ev_click1 = ! ev_click1;
					// alert(ev_click1) ;
				} else {
					$(".ul_3 li span[data_leg=0]").removeClass("legende_click");
					for (var i = 0; i < myChart3.data.datasets[0].data.length; i++) {
						myChart3.data.datasets[0].data[i] = tab_temp[i];
					}
					myChart3.update();
					ev_click1 = ! ev_click1;
				}
			});

			$("#chart-legends_pax").on('click', "li span[data_leg=1]", function () {
				if (ev_click2 == false) {
					$(".ul_3 li span[data_leg=1]").addClass("legende_click");
					for (var i = 0; i < myChart3.data.datasets[1].data.length; i++) {
						myChart3.data.datasets[1].data[i] = 0;
					}
					myChart3.update();
					ev_click2 = ! ev_click2;
					// alert(ev_click2) ;
				} else {
					$(".ul_3 li span[data_leg=1]").removeClass("legende_click");
					for (var i = 0; i < myChart3.data.datasets[1].data.length; i++) {
						myChart3.data.datasets[1].data[i] = tab_temp2[i];
					}
					myChart3.update();
					ev_click2 = ! ev_click2;
				}
			});

			return myChart3;

		}

		function create_chart4(ctx4, config4) {
			var myChart4 = new Chart(ctx4, config4);

			// pour dire qu'on va utiliser notre propre légende html fenitra
			document.getElementById('chart-legends_KPI').innerHTML = myChart4.generateLegend();

			// event pour data 1

			var ev_click1 = false;
			var ev_click2 = false;
			var tab_temp = [];
			var tab_temp2 = [];
			for (var i = 0; i < myChart4.data.datasets[0].data.length; i++) { // myChart1.data.datasets[0].data[i]= -10;
				tab_temp[i] = myChart4.data.datasets[0].data[i];
			}
			for (var i = 0; i < myChart4.data.datasets[1].data.length; i++) { // myChart1.data.datasets[0].data[i]= -10;
				tab_temp2[i] = myChart4.data.datasets[1].data[i];
			}
			$("#chart-legends_KPI").on('click', "li span[data_leg=0]", function () {
				if (ev_click1 == false) {
					$(".ul_4 li span[data_leg=0]").addClass("legende_click");
					for (var i = 0; i < myChart4.data.datasets[0].data.length; i++) {
						myChart4.data.datasets[0].data[i] = 0;
					}
					myChart4.update();
					ev_click1 = ! ev_click1;
					// alert(ev_click1) ;
				} else {
					$(".ul_4 li span[data_leg=0]").removeClass("legende_click");
					for (var i = 0; i < myChart4.data.datasets[0].data.length; i++) {
						myChart4.data.datasets[0].data[i] = tab_temp[i];
					}
					myChart4.update();
					ev_click1 = ! ev_click1;
				}
			});

			$("#chart-legends_KPI").on('click', "li span[data_leg=1]", function () {
				if (ev_click2 == false) {
					$(".ul_4 li span[data_leg=1]").addClass("legende_click");
					for (var i = 0; i < myChart4.data.datasets[1].data.length; i++) {
						myChart4.data.datasets[1].data[i] = 0;
					}
					myChart4.update();
					ev_click2 = ! ev_click2;
					// alert(ev_click2) ;
				} else {
					$(".ul_4 li span[data_leg=1]").removeClass("legende_click");
					for (var i = 0; i < myChart4.data.datasets[1].data.length; i++) {
						myChart4.data.datasets[1].data[i] = tab_temp2[i];
					}
					myChart4.update();
					ev_click2 = ! ev_click2;
				}
			});

			return myChart4;

		}

		function findArrayMax(array){
			var M = array[0];
			
			for(var i = 0; i< array.length; i++){
				var x = parseFloat(array[i]);
				if(M < x){
					M = x;
				}
			}
			
			return M;
		}

		function portionner(val){
			return parseInt(val / 4) ;
		} 
		var myChart1 = create_chart1(create_ctx1(), create_config1(my_data_to, my_labels, 100, 20));

		if(findArrayMax(my_data_ca) != 0){
			var myChart2 = create_chart2(create_ctx2(), create_config2(my_data_ca, my_labels, parseInt(findArrayMax(my_data_ca) + portionner(findArrayMax(my_data_ca))), portionner(findArrayMax(my_data_ca))));
		}
		else if(findArrayMax(my_data_ca) == 0){
			var myChart2 = create_chart2(create_ctx2(), create_config2(my_data_ca, my_labels, 100, 20));
		}

		var max_pax = findArrayMax(my_data_pax);
		var max_occ = findArrayMax(my_data_occ);
		var ex = [max_pax, max_occ];
		var max_pax_occ = findArrayMax(ex);
		if(max_pax_occ != 0){
			var myChart3 = create_chart3(create_ctx3(), create_config3(my_data_pax, my_data_occ, my_labels,  5*parseInt(portionner(max_pax_occ)) , portionner(max_pax_occ)));
		}
		else if(max_pax_occ == 0){
			var myChart3 = create_chart3(create_ctx3(), create_config3(my_data_pax, my_data_occ, my_labels, 100, 20));
		}

		// affiche chart 4

		var max_adr = findArrayMax(souche2_adr);
		var max_revp = findArrayMax(souche2_revp);
		var ex = [max_adr, max_revp];
		var max_kpi = findArrayMax(ex);
		
		if(max_kpi != 0){
			var myChart4 = create_chart4(create_ctx4(), create_config4(souche2_adr, souche2_revp, my_labels,  5*parseInt(portionner(max_kpi)) , portionner(max_kpi)));
		}
		else if(max_kpi == 0){
			var myChart4 = create_chart4(create_ctx4(), create_config4(souche2_adr, souche2_revp, my_labels, 100, 20));
		}

		/* ajax pour loader le graph */

		/* debut dataTable */

		var pseudo_hotel = "{{ hotel }}";
		// alert(pseudo_hotel);

		var table = $('#tab_client_heb').DataTable({
			"language": {
				"sEmptyTable": "Aucune donnée disponible dans le tableau",
				"sInfo": "Affichage de l'élément _START_ à _END_ sur _TOTAL_ éléments",
				"sInfoEmpty": "Affichage de l'élément 0 à 0 sur 0 élément",
				"sInfoFiltered": "(filtré à partir de _MAX_ éléments au total)",
				"sInfoPostFix": "",
				"sInfoThousands": ",",
				"sLengthMenu": "Afficher _MENU_ éléments",
				"sLoadingRecords": "Chargement...",
				"sProcessing": "Traitement...",
				"sSearch": "Rechercher :",
				"sZeroRecords": "Aucun élément correspondant trouvé",
				"oPaginate": {
					"sFirst": "Premier",
					"sLast": "Dernier",
					"sNext": "Suivant",
					"sPrevious": "Précédent"
				},
				"oAria": {
					"sSortAscending": ": activer pour trier la colonne par ordre croissant",
					"sSortDescending": ": activer pour trier la colonne par ordre décroissant"
				},
				"select": {
					"rows": {
						"_": "%d lignes sélectionnées",
						"0": "Aucune ligne sélectionnée",
						"1": "1 ligne sélectionnée"
					}
				}
			},

			// annule le tri
			order: [
				[0, 'asc']
			],
			ordering: false,

			responsive: true,
			scrollY: false, // raha scrollena de asina val ex 400
			scrollX: true,
			scrollCollapse: true,
			paging: true,
			autoFill: true
		});

			new $.fn.dataTable.FixedHeader(table);


			/*  fiun table */

			/* fin datatable */


			/* fin tri tableau heb */
			// suppression client présent


			$(document).on('click', ".btn_client_suppr", function (ev) { // ev.preventDefault();
				ev.preventDefault();
				var id = $(this).attr('data-id');
				var date1 = $('#date1').val();
				var date2 = $('#date2').val();
				// alert(id);
				$.ajax({
					url: "/admin/check_client",
					data: {
						"client_id": id,
						"date1" : date1,
						"date2" : date2,
						"action" : "suppression",
					},
					type: "POST",

					success: function (response) {
						$('.modal_suppr_client').html(response);
						if($('.modal_suppr_client').children().length > 0){
							setTimeout(function(){
								$('#modal_form_confirme').modal('show');
							}, 500);
						}
						
					},
					error: function (error) {
						alert('erreur de server');
					}
				})
			})

			/* fin suppression client*/

			/* debut modif client */

		$(document).on('click', '.btn_client_modif', function (ev) {
			ev.preventDefault();
			var id = $(this).attr('data-id');
			var date1 = $('#date1').val();
			var date2 = $('#date2').val();
			// alert(id);
			$.ajax({
				url: "/admin/check_client",
				data: {
					"client_id": id,
					"date1" : date1,
					"date2" : date2,
					"action" : "modification"
				},
				type: "POST",

				success: function (response) {
					$('.modal_modif_client').html(response);
				
					if($('.modal_modif_client').children().length > 0){
						setTimeout(function(){
							$('#modal_form').modal('show');
						}, 500);
					}
				},
				error: function (error) {
					alert('erreur de server');
				}
			})
		})

		$(document).on('click', '#a_modal_modif_client', function (ev) {
			ev.preventDefault();
			var id = $(this).attr("data-id");
			var nom = $('#modif_nom_client').val();
			var prenom = $('#modif_prenom_client').val();
			var date_arrivee = $('#modif_date_arrivee').val();
			var date_depart = $('#modif_date_depart').val();
			// alert(id+"/"+nom+"/"+date_depart+"/"+date_arrivee+"/"+prenom);
			// ajax
			$.ajax({
				url: "/admin/edit_client",
				data: {
					"id": id,
					"nom": nom,
					"prenom": prenom,
					"date_arrivee": date_arrivee,
					"date_depart": date_depart
				},
				type: "POST",
				beforeSend: function () {
					$('#a_modal_modif_client').html('<span>Patienter...</span>');
				},
				success: function (response) {
					if (response == "ok") {
						table.ajax.reload(null, false);
						$('#modal_form').modal('hide');
						Location.reload();
					}
				},
				error: function (error) {
					alert('erreur de server');
				},
				complete: function () {
					$('#a_modal_modif_client').html('<span>Enregistrer</span>');
				}
			})
		})


		// triage chart heb_to
		$('#mois_heb_to').on('change', function () {


				$('#element_canvas_heb_to').empty();

				var mois = $('#mois_heb_to').val();
				var annee = $('#annee_heb_to').val();
				var data = {
				'data': mois + "-" + annee
				};
					$.ajax({
						url: "/profile/filtre/graph/heb_to/" + pseudo_hotel,
						type: "POST",
						data: data,
						beforeSend: function () {
							$('.load_canvas_to').css('display', 'flex');
						},
						success: function (response) {
							if (response) { // console.log(response);
								if (mois != 'tous_les_mois') {


									var my_data = response;

									var my_labels = ["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31"];

									$('#element_canvas_heb_to').html('<div><canvas id="canvas_to"></canvas></div><div style = "opacity : 0 !important" id="chart-legends_to"></div>');

									setTimeout(function () {

										myChart1 = new Chart(create_ctx1(), create_config1(my_data, my_labels, 100, 20));
										myChart1.update();
										// pour dire qu'on va utiliser notre propre légende html fenitra
										document.getElementById('chart-legends_to').innerHTML = myChart1.generateLegend();

										// event pour data 1

										var ev_click = false;
										var tab_temp = [];
										for (var i = 0; i < myChart1.data.datasets[0].data.length; i++) { // myChart1.data.datasets[0].data[i]= -10;
											tab_temp[i] = myChart1.data.datasets[0].data[i];
										}
										$("#chart-legends_to").on('click', "li span[data_leg=0]", function () {

											if (ev_click == false) {
												$(".ul_1 li span[data_leg=0]").addClass("legende_click");
												for (var i = 0; i < myChart1.data.datasets[0].data.length; i++) {
													myChart1.data.datasets[0].data[i] = -10;
												}
												myChart1.update();
												ev_click = ! ev_click;
												// alert(ev_click) ;
											} else {
												$(".ul_1 li span[data_leg=0]").removeClass("legende_click");
												for (var i = 0; i < myChart1.data.datasets[0].data.length; i++) {
													myChart1.data.datasets[0].data[i] = tab_temp[i];
												}
												myChart1.update();
												ev_click = ! ev_click;
												// alert(ev_click) ;
											}
										});

									}, 1000)

								} else {
									var my_data = response;
									var my_labels = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Sept","Oct","Nov","Dec"];
									$('#element_canvas_heb_to').html('<div><canvas id="canvas_to"></canvas></div><div style = "opacity : 0 !important" id="chart-legends_to"></div>');

									setTimeout(function () {

										myChart1 = new Chart(create_ctx1(), create_config1(my_data, my_labels, 100, 20));
										myChart1.update();
										// pour dire qu'on va utiliser notre propre légende html fenitra
										document.getElementById('chart-legends_to').innerHTML = myChart1.generateLegend();

										// event pour data 1

										var ev_click = false;
										var tab_temp = [];
										for (var i = 0; i < myChart1.data.datasets[0].data.length; i++) { // myChart1.data.datasets[0].data[i]= -10;
											tab_temp[i] = myChart1.data.datasets[0].data[i];
										}
										$("#chart-legends_to").on('click', "li span[data_leg=0]", function () {

											if (ev_click == false) {
												$(".ul_1 li span[data_leg=0]").addClass("legende_click");
												for (var i = 0; i < myChart1.data.datasets[0].data.length; i++) {
													myChart1.data.datasets[0].data[i] = -10;
												}
													myChart1.update();
													ev_click = ! ev_click;
												// alert(ev_click) ;
											} else {
												$(".ul_1 li span[data_leg=0]").removeClass("legende_click");
													for (var i = 0; i < myChart1.data.datasets[0].data.length; i++) {
														myChart1.data.datasets[0].data[i] = tab_temp[i];
													}
													myChart1.update();
													ev_click = ! ev_click;
													// alert(ev_click) ;
											}
										});

									}, 1000)
								}
							}
						},
						error: function (error) {
							alert('erreur server au niveau de triage chart heb_to ' + pseudo_hotel)
						},
						complete: function () {
							setTimeout(function () {
								$('.load_canvas_to').css('display', 'none');
							}, 1000);
						}
					})
	})

					$('#annee_heb_to').on('change', function () {
						$('#element_canvas_heb_to').empty();
						var mois = $('#mois_heb_to').val();
						var annee = $('#annee_heb_to').val();
						var data = {
							'data': mois + "-" + annee
						};
						$.ajax({
							url: "/profile/filtre/graph/heb_to/" + pseudo_hotel,
							type: "POST",
							data: data,
							beforeSend: function () {
								$('.load_canvas_to').css('display', 'flex');
							},
							success: function (response) {
								if (response) { // console.log(response);
								if (mois != 'tous_les_mois') {

								var my_data = response;

								var my_labels = ["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31"];


								$('#element_canvas_heb_to').html('<div><canvas id="canvas_to"></canvas></div><div style = "opacity : 0 !important" id="chart-legends_to"></div>');

								setTimeout(function () {

										myChart1 = new Chart(create_ctx1(), create_config1(my_data, my_labels, 100,20));
										myChart1.update();
										// pour dire qu'on va utiliser notre propre légende html fenitra
										document.getElementById('chart-legends_to').innerHTML = myChart1.generateLegend();

											// event pour data 1

										var ev_click = false;
										var tab_temp = [];
										for (var i = 0; i < myChart1.data.datasets[0].data.length; i++) { // myChart1.data.datasets[0].data[i]= -10;
											tab_temp[i] = myChart1.data.datasets[0].data[i];
										}
										$("#chart-legends_to").on('click', "li span[data_leg=0]", function () {

											if (ev_click == false) {
													$(".ul_1 li span[data_leg=0]").addClass("legende_click");
													for (var i = 0; i < myChart1.data.datasets[0].data.length; i++) {
														myChart1.data.datasets[0].data[i] = -10;
													}
													myChart1.update();
													ev_click = ! ev_click;
													// alert(ev_click) ;
											} else {
												$(".ul_1 li span[data_leg=0]").removeClass("legende_click");
												for (var i = 0; i < myChart1.data.datasets[0].data.length; i++) {
													myChart1.data.datasets[0].data[i] = tab_temp[i];
												}
												myChart1.update();
												ev_click = ! ev_click;
												// alert(ev_click) ;
											}
										});
									}, 1000)
								} else {
									var my_data = response;
									var my_labels = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sept","Oct","Nov","Dec"];

									$('#element_canvas_heb_to').html('<div><canvas id="canvas_to"></canvas></div><div style = "opacity : 0 !important" id="chart-legends_to"></div>');

									setTimeout(function () {

										myChart1 = new Chart(create_ctx1(), create_config1(my_data, my_labels, 100, 20));
										myChart1.update();
										// pour dire qu'on va utiliser notre propre légende html fenitra
										document.getElementById('chart-legends_to').innerHTML = myChart1.generateLegend();

										// event pour data 1

										var ev_click = false;
										var tab_temp = [];
										for (var i = 0; i < myChart1.data.datasets[0].data.length; i++) { // myChart1.data.datasets[0].data[i]= -10;
											tab_temp[i] = myChart1.data.datasets[0].data[i];
										}
										$("#chart-legends_to").on('click', "li span[data_leg=0]", function () {

											if (ev_click == false) {
												$(".ul_1 li span[data_leg=0]").addClass("legende_click");
												for (var i = 0; i < myChart1.data.datasets[0].data.length; i++) {
													myChart1.data.datasets[0].data[i] = -10;
												}
												myChart1.update();
												ev_click = ! ev_click;
												// alert(ev_click) ;
											} else {
												$(".ul_1 li span[data_leg=0]").removeClass("legende_click");
												for (var i = 0; i < myChart1.data.datasets[0].data.length; i++) {
												myChart1.data.datasets[0].data[i] = tab_temp[i];
											}
											myChart1.update();
											ev_click = ! ev_click;
											// alert(ev_click) ;
										}
									});

								}, 1000)
							}
						}
					},

					complete: function () {
						setTimeout(function () {
							$('.load_canvas_to').css('display', 'none');
						}, 1000);
					},
					error: function (error) {
						alert('erreur server au niveau de triage chart heb_to ' + pseudo_hotel)
					}
				})
			})

						// triage chart heb_ca
				$('#mois_heb_ca').on('change', function () {

						$('#element_canvas_heb_ca').empty();

						var mois = $('#mois_heb_ca').val();
						var annee = $('#annee_heb_ca').val();
						var data = {
							'data': mois + "-" + annee
						};
						$.ajax({
							url: "/profile/filtre/graph/heb_ca/" + pseudo_hotel,
							type: "POST",
							data: data,
							beforeSend: function () {
								$('.load_canvas_ca').css('display', 'flex');
							},
							success: function (response) {
								if (response) { // console.log(response);
									if (mois != 'tous_les_mois') {
										var my_data = response;
										var my_labels = ["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31"];


										$('#element_canvas_heb_ca').html('<div><canvas id="canvas_ca"></canvas></div><div style = "opacity : 0 !important" id="chart-legends_ca"></div>');

										setTimeout(function () {

											var Max = parseInt(findArrayMax(my_data) + portionner(findArrayMax(my_data)));
											var pas = portionner(findArrayMax(my_data));
											if(Max != 0){
												myChart2 = new Chart(create_ctx2(), create_config2 (my_data, my_labels, Max, pas));
											}
											else if(Max == 0){
												Max = 100;
												pas = 20; 
												myChart2 = new Chart(create_ctx2(), create_config2 (my_data, my_labels, Max, pas));
											}
											myChart2.update();

											// pour dire qu'on va utiliser notre propre légende html fenitra
											document.getElementById('chart-legends_ca').innerHTML = myChart2.generateLegend();


											// legende 2

											var ev_click2 = false;
											var tab_temp2 = [];
											for (var i = 0; i < myChart2.data.datasets[0].data.length; i++) { // myChart2.data.datasets[0].data[i]= -10;
												tab_temp2[i] = myChart2.data.datasets[0].data[i];
											}
											$("#chart-legends_ca").on('click', "li span[data_leg=0]", function () {

												if (ev_click2 == false) {
													$(".ul_2 li span[data_leg=0]").addClass("legende_click");
													for (var i = 0; i < myChart2.data.datasets[0].data.length; i++) {
														myChart2.data.datasets[0].data[i] = -10;
													}
													myChart2.update();
													ev_click2 = ! ev_click2;
													// alert(ev_click2) ;
													} else {
														$(".ul_2 li span[data_leg=0]").removeClass("legende_click");
														for (var i = 0; i < myChart2.data.datasets[0].data.length; i++) {
															myChart2.data.datasets[0].data[i] = tab_temp2[i];
														}

													myChart2.update();
													ev_click2 = ! ev_click2;

												}
											});
										}, 1000)
									} else {
										var my_data = response;
									
										var my_labels = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sept","Oct","Nov","Dec"];

										$('#element_canvas_heb_ca').html('<div><canvas id="canvas_ca"></canvas></div><div style = "opacity : 0 !important" id="chart-legends_ca"></div>');

										setTimeout(function () {
											var Max = parseInt(findArrayMax(my_data) + portionner(findArrayMax(my_data)));
											var pas = portionner(findArrayMax(my_data))
											if(Max != 0){
												myChart2 = new Chart(create_ctx2(), create_config2(my_data, my_labels, Max, pas));
											}
											else{
												Max = 100;
												pas = 20;
												myChart2 = new Chart(create_ctx2(), create_config2(my_data, my_labels, Max, pas));
											}
											myChart2.update();

											// pour dire qu'on va utiliser notre propre légende html fenitra
											document.getElementById('chart-legends_ca').innerHTML = myChart2.generateLegend();


											// legende 2

											var ev_click2 = false;
											var tab_temp2 = [];
											for (var i = 0; i < myChart2.data.datasets[0].data.length; i++) { // myChart2.data.datasets[0].data[i]= -10;
												tab_temp2[i] = myChart2.data.datasets[0].data[i];
											}
											$("#chart-legends_ca").on('click', "li span[data_leg=0]", function () {

													if (ev_click2 == false) {
														$(".ul_2 li span[data_leg=0]").addClass("legende_click");
														for (var i = 0; i < myChart2.data.datasets[0].data.length; i++) {
															myChart2.data.datasets[0].data[i] = -10;
														}
														myChart2.update();
														ev_click2 = ! ev_click2;
														// alert(ev_click2) ;
													} else {
														$(".ul_2 li span[data_leg=0]").removeClass("legende_click");
														for (var i = 0; i < myChart2.data.datasets[0].data.length; i++) {
															myChart2.data.datasets[0].data[i] = tab_temp2[i];
														}

														myChart2.update();
														ev_click2 = ! ev_click2;
													}
											});

										}, 1000)
									}
								}
							},
							error: function (error) {
								alert('erreur server au niveau de triage chart heb_to ' + pseudo_hotel)
							}
						})
					})

				$('#annee_heb_ca').on('change', function () {

					$('#element_canvas_heb_ca').empty();

					var mois = $('#mois_heb_ca').val();
					var annee = $('#annee_heb_ca').val();
					var data = {
						'data': mois + "-" + annee
					};
					// alert(data.data);
					$.ajax({
						url: "/profile/filtre/graph/heb_ca/" + pseudo_hotel,
						type: "POST",
						data: data,
						beforeSend: function () {
							$('.load_canvas_ca').css('display', 'flex');
						},
						success: function (response) {

							if (response) { // console.log(response);
								if (mois != 'tous_les_mois') {
									var my_data = response;
									
									var my_labels = ["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31"];


									$('#element_canvas_heb_ca').html('<div><canvas id="canvas_ca"></canvas></div><div style = "opacity : 0 !important" id="chart-legends_ca"></div>');

									setTimeout(function () {
										var Max = parseInt(findArrayMax(my_data) + portionner(findArrayMax(my_data)));
										var pas = portionner(findArrayMax(my_data));
										if(Max != 0){
											myChart2 = new Chart(create_ctx2(), create_config2(my_data, my_labels, Max, pas));
										}
										else if(Max ==0){
											Max = 100;
											pas = 20;
											myChart2 = new Chart(create_ctx2(), create_config2(my_data, my_labels, Max, pas));
										}
									
										myChart2.update();

										// pour dire qu'on va utiliser notre propre légende html fenitra
										document.getElementById('chart-legends_ca').innerHTML = myChart2.generateLegend();


										// legende 2

										var ev_click2 = false;
										var tab_temp2 = [];
										for (var i = 0; i < myChart2.data.datasets[0].data.length; i++) { // myChart2.data.datasets[0].data[i]= -10;
											tab_temp2[i] = myChart2.data.datasets[0].data[i];
										}
										$("#chart-legends_ca").on('click', "li span[data_leg=0]", function () {

											if (ev_click2 == false) {
												$(".ul_2 li span[data_leg=0]").addClass("legende_click");
												for (var i = 0; i < myChart2.data.datasets[0].data.length; i++) {
												myChart2.data.datasets[0].data[i] = -10;
												}
												myChart2.update();
												ev_click2 = ! ev_click2;
												// alert(ev_click2) ;
											} else {
												$(".ul_2 li span[data_leg=0]").removeClass("legende_click");
												for (var i = 0; i < myChart2.data.datasets[0].data.length; i++) {
													myChart2.data.datasets[0].data[i] = tab_temp2[i];
												}

												myChart2.update();
												ev_click2 = ! ev_click2;

											}
										});

									}, 1000)

									} else {
										var my_data = response;
										
										var my_labels = [
										"Jan",
										"Feb",
										"Mar",
										"Apr",
										"May",
										"Jun",
										"Jul",
										"Aug",
										"Sept",
										"Oct",
										"Nov",
										"Dec"
										];

										$('#element_canvas_heb_ca').html('<div><canvas id="canvas_ca"></canvas></div><div style = "opacity : 0 !important" id="chart-legends_ca"></div>');

										setTimeout(function () {

											var Max = parseInt(findArrayMax(my_data) + portionner(findArrayMax(my_data)));
											var pas = portionner(findArrayMax(my_data));
											if(Max != 0){
												myChart2 = new Chart(create_ctx2(), create_config2(my_data, my_labels, Max, pas));
											}
											else if(Max ==0){
												Max = 100;
												pas = 20;
												myChart2 = new Chart(create_ctx2(), create_config2(my_data, my_labels, Max, pas));
											}
											
											myChart2.update();

											// pour dire qu'on va utiliser notre propre légende html fenitra
											document.getElementById('chart-legends_ca').innerHTML = myChart2.generateLegend();


											// legende 2

											var ev_click2 = false;
											var tab_temp2 = [];
											for (var i = 0; i < myChart2.data.datasets[0].data.length; i++) { // myChart2.data.datasets[0].data[i]= -10;
												tab_temp2[i] = myChart2.data.datasets[0].data[i];
											}
											$("#chart-legends_ca").on('click', "li span[data_leg=0]", function () {

												if (ev_click2 == false) {
													$(".ul_2 li span[data_leg=0]").addClass("legende_click");
													for (var i = 0; i < myChart2.data.datasets[0].data.length; i++) {
														myChart2.data.datasets[0].data[i] = -10;
													}
													myChart2.update();
													ev_click2 = ! ev_click2;
													// alert(ev_click2) ;
												} else {
													$(".ul_2 li span[data_leg=0]").removeClass("legende_click");
													for (var i = 0; i < myChart2.data.datasets[0].data.length; i++) {
														myChart2.data.datasets[0].data[i] = tab_temp2[i];
													}

													myChart2.update();
													ev_click2 = ! ev_click2;

												}
											});

										}, 1000)
									}
								}
							},
						error: function (error) {
							alert('erreur server au niveau de triage chart heb_ca ' + pseudo_hotel)
						}
					})
				})

				// mois pax 
				$('#mois_pax').on("change", function(){
					$('#element_canvas_pax').empty();

						var mois = $('#mois_pax').val();
						var annee = $('#annee_pax').val();
						var data = {
							'data': mois + "-" + annee
						};
						$.ajax({
							url: "/profile/filtre/graph/pax/" + pseudo_hotel,
							type: "POST",
							data: data,
							
							success: function (response) {
								if (response) {
									if (mois != 'tous_les_mois') {
										var my_data = response;
										
										var my_labels = ["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31"];


										$('#element_canvas_pax').html('<div><canvas id="canvas_pax"></canvas></div><div id="chart-legends_pax"></div>');

										setTimeout(function () {

											var Max1 = Math.max(...my_data.tab_jour_n_pax);
											var Max2 = Math.max(...my_data.tab_jour_n_chambre);
											var Max = Math.max(Max1, Max2);
											
											if(Max != 0){
												// fenitra
												var myChart3 = create_chart3(create_ctx3(), create_config3(my_data.tab_jour_n_pax, my_data.tab_jour_n_chambre, my_labels,  5*parseInt(portionner(Max)) , portionner(Max)));
											}
											else if(Max == 0){
												Max = 100;
												pas = 20; 
												var myChart3 = create_chart3(create_ctx3(), create_config3(my_data.tab_heb_n_pax, my_data.tab_heb_n_chambre, my_labels, 100, 20));
											}
											myChart3.update();

											// pour dire qu'on va utiliser notre propre légende html fenitra
											document.getElementById('chart-legends_pax').innerHTML = myChart3.generateLegend();


											// legende 2

											var ev_click1 = false;
											var tab_temp1 = [];
											var ev_click2 = false;
											var tab_temp2 = [];
											for (var i = 0; i < myChart3.data.datasets[0].data.length; i++) { 
												tab_temp1[i] = myChart3.data.datasets[0].data[i];
											}

											for (var i = 0; i < myChart3.data.datasets[1].data.length; i++) { 
												tab_temp2[i] = myChart3.data.datasets[1].data[i];
											}
											$("#chart-legends_pax").on('click', "li span[data_leg=0]", function () {

												if (ev_click1 == false) {
													$(".ul_2 li span[data_leg=0]").addClass("legende_click");
													for (var i = 0; i < myChart3.data.datasets[0].data.length; i++) {
														myChart3.data.datasets[0].data[i] = 0;
													}
													myChart3.update();
													ev_click1 = ! ev_click1;
													// alert(ev_click2) ;
													} else {
														$(".ul_2 li span[data_leg=0]").removeClass("legende_click");
														for (var i = 0; i < myChart3.data.datasets[0].data.length; i++) {
															myChart3.data.datasets[0].data[i] = tab_temp1[i];
														}

													myChart3.update();
													ev_click1 = ! ev_click1;

												}
											});
											$("#chart-legends_pax").on('click', "li span[data_leg=1]", function () {

												if (ev_click2 == false) {
													$(".ul_2 li span[data_leg=1]").addClass("legende_click");
													for (var i = 0; i < myChart3.data.datasets[1].data.length; i++) {
														myChart3.data.datasets[1].data[i] = 0;
													}
													myChart3.update();
													ev_click2 = ! ev_click2;
													// alert(ev_click2) ;
													} else {
														$(".ul_2 li span[data_leg=1]").removeClass("legende_click");
														for (var i = 0; i < myChart3.data.datasets[1].data.length; i++) {
															myChart3.data.datasets[1].data[i] = tab_temp2[i];
														}

													myChart3.update();
													ev_click2 = ! ev_click2;

												}
											});
										}, 1000)
									} else {
										// eto zao
										var my_data = response;
										
										var my_labels = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sept","Oct","Nov","Dec"];
										
										$('#element_canvas_pax').html('<div><canvas id="canvas_pax"></canvas></div><div id="chart-legends_pax"></div>');

										setTimeout(function () {
											var Max1 = Math.max(...my_data.tab_heb_n_pax);
											var Max2 = Math.max(...my_data.tab_heb_n_chambre);
											var Max = Math.max(Max1, Max2);
											if(Max != 0){
												
												var myChart3 = create_chart3(create_ctx3(), create_config3(my_data.tab_heb_n_pax, my_data.tab_heb_n_chambre, my_labels, 5*parseInt(portionner(Max)) , portionner(Max)));
											}
											else if(Max == 0){
												Max = 100;
												pas = 20; 
												var myChart3 = create_chart3(create_ctx3(), create_config3(my_data.tab_heb_n_pax, my_data.tab_heb_n_chambre, my_labels, 100, 20));
											}
											myChart3.update();

											// pour dire qu'on va utiliser notre propre légende html fenitra
											document.getElementById('chart-legends_pax').innerHTML = myChart3.generateLegend();


											// legende 2

											var ev_click1 = false;
											var tab_temp1 = [];
											var ev_click2 = false;
											var tab_temp2 = [];
											for (var i = 0; i < myChart3.data.datasets[0].data.length; i++) { 
												tab_temp1[i] = myChart3.data.datasets[0].data[i];
											}

											for (var i = 0; i < myChart3.data.datasets[1].data.length; i++) { 
												tab_temp2[i] = myChart3.data.datasets[1].data[i];
											}
											$("#chart-legends_pax").on('click', "li span[data_leg=0]", function () {

												if (ev_click1 == false) {
													$(".ul_2 li span[data_leg=0]").addClass("legende_click");
													for (var i = 0; i < myChart3.data.datasets[0].data.length; i++) {
														myChart3.data.datasets[0].data[i] = 0;
													}
													myChart3.update();
													ev_click1 = ! ev_click1;
													// alert(ev_click2) ;
													} else {
														$(".ul_2 li span[data_leg=0]").removeClass("legende_click");
														for (var i = 0; i < myChart3.data.datasets[0].data.length; i++) {
															myChart3.data.datasets[0].data[i] = tab_temp1[i];
														}

													myChart3.update();
													ev_click1 = ! ev_click1;

												}
											});
											$("#chart-legends_pax").on('click', "li span[data_leg=1]", function () {

												if (ev_click2 == false) {
													$(".ul_2 li span[data_leg=1]").addClass("legende_click");
													for (var i = 0; i < myChart3.data.datasets[1].data.length; i++) {
														myChart3.data.datasets[1].data[i] = 0;
													}
													myChart3.update();
													ev_click2 = ! ev_click2;
													// alert(ev_click2) ;
													} else {
														$(".ul_2 li span[data_leg=1]").removeClass("legende_click");
														for (var i = 0; i < myChart3.data.datasets[1].data.length; i++) {
															myChart3.data.datasets[1].data[i] = tab_temp2[i];
														}

													myChart3.update();
													ev_click2 = ! ev_click2;

												}
											});

										}, 1000)
									}
								}
							},
							error: function (error) {
								alert('erreur server au niveau de triage chart heb_to ' + pseudo_hotel)
							}
						})
				})

				$('#annee_pax').on("change", function(){
					$('#element_canvas_pax').empty();

						var mois = $('#mois_pax').val();
						var annee = $('#annee_pax').val();
						var data = {
							'data': mois + "-" + annee
						};
						$.ajax({
							url: "/profile/filtre/graph/pax/" + pseudo_hotel,
							type: "POST",
							data: data,
							success: function (response) {
								if (response) {
									if (mois != 'tous_les_mois') {
										var my_data = response;
										
										var my_labels = ["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31"];


										$('#element_canvas_pax').html('<div><canvas id="canvas_pax"></canvas></div><div id="chart-legends_pax"></div>');

										setTimeout(function () {

											var Max1 = Math.max(...my_data.tab_jour_n_pax);
											var Max2 = Math.max(...my_data.tab_jour_n_chambre);
											var Max = Math.max(Max1, Max2);
											
											if(Max != 0){
												// fenitra
												var myChart3 = create_chart3(create_ctx3(), create_config3(my_data.tab_jour_n_pax, my_data.tab_jour_n_chambre, my_labels,  Max + parseInt(Max / 4) , portionner(Max)));
											}
											else if(Max == 0){
												Max = 100;
												pas = 20; 
												var myChart3 = create_chart3(create_ctx3(), create_config3(my_data.tab_heb_n_pax, my_data.tab_heb_n_chambre, my_labels, 100, 20));
											}
											myChart3.update();

											// pour dire qu'on va utiliser notre propre légende html fenitra
											document.getElementById('chart-legends_pax').innerHTML = myChart3.generateLegend();


											// legende 2

											var ev_click1 = false;
											var tab_temp1 = [];
											var ev_click2 = false;
											var tab_temp2 = [];
											for (var i = 0; i < myChart3.data.datasets[0].data.length; i++) { 
												tab_temp1[i] = myChart3.data.datasets[0].data[i];
											}

											for (var i = 0; i < myChart3.data.datasets[1].data.length; i++) { 
												tab_temp2[i] = myChart3.data.datasets[1].data[i];
											}
											$("#chart-legends_pax").on('click', "li span[data_leg=0]", function () {

												if (ev_click1 == false) {
													$(".ul_2 li span[data_leg=0]").addClass("legende_click");
													for (var i = 0; i < myChart3.data.datasets[0].data.length; i++) {
														myChart3.data.datasets[0].data[i] = 0;
													}
													myChart3.update();
													ev_click1 = ! ev_click1;
													// alert(ev_click2) ;
													} else {
														$(".ul_2 li span[data_leg=0]").removeClass("legende_click");
														for (var i = 0; i < myChart3.data.datasets[0].data.length; i++) {
															myChart3.data.datasets[0].data[i] = tab_temp1[i];
														}

													myChart3.update();
													ev_click1 = ! ev_click1;

												}
											});
											$("#chart-legends_pax").on('click', "li span[data_leg=1]", function () {

												if (ev_click2 == false) {
													$(".ul_2 li span[data_leg=1]").addClass("legende_click");
													for (var i = 0; i < myChart3.data.datasets[1].data.length; i++) {
														myChart3.data.datasets[1].data[i] = 0;
													}
													myChart3.update();
													ev_click2 = ! ev_click2;
													// alert(ev_click2) ;
													} else {
														$(".ul_2 li span[data_leg=1]").removeClass("legende_click");
														for (var i = 0; i < myChart3.data.datasets[1].data.length; i++) {
															myChart3.data.datasets[1].data[i] = tab_temp2[i];
														}

													myChart3.update();
													ev_click2 = ! ev_click2;

												}
											});
										}, 1000)
									} else {
										// eto zao
										var my_data = response;
										
										var my_labels = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sept","Oct","Nov","Dec"];
										
										$('#element_canvas_pax').html('<div><canvas id="canvas_pax"></canvas></div><div id="chart-legends_pax"></div>');

										setTimeout(function () {
											var Max1 = Math.max(...my_data.tab_heb_n_pax);
											var Max2 = Math.max(...my_data.tab_heb_n_chambre);
											var Max = Math.max(Max1, Max2);
											if(Max != 0){
												
												var myChart3 = create_chart3(create_ctx3(), create_config3(my_data.tab_heb_n_pax, my_data.tab_heb_n_chambre, my_labels,  Max + parseInt(Max / 4) , portionner(Max)));
											}
											else if(Max == 0){
												Max = 100;
												pas = 20; 
												var myChart3 = create_chart3(create_ctx3(), create_config3(my_data.tab_heb_n_pax, my_data.tab_heb_n_chambre, my_labels, 100, 20));
											}
											myChart3.update();

											// pour dire qu'on va utiliser notre propre légende html fenitra
											document.getElementById('chart-legends_pax').innerHTML = myChart3.generateLegend();


											// legende 2

											var ev_click1 = false;
											var tab_temp1 = [];
											var ev_click2 = false;
											var tab_temp2 = [];
											for (var i = 0; i < myChart3.data.datasets[0].data.length; i++) { 
												tab_temp1[i] = myChart3.data.datasets[0].data[i];
											}

											for (var i = 0; i < myChart3.data.datasets[1].data.length; i++) { 
												tab_temp2[i] = myChart3.data.datasets[1].data[i];
											}
											$("#chart-legends_pax").on('click', "li span[data_leg=0]", function () {

												if (ev_click1 == false) {
													$(".ul_2 li span[data_leg=0]").addClass("legende_click");
													for (var i = 0; i < myChart3.data.datasets[0].data.length; i++) {
														myChart3.data.datasets[0].data[i] = 0;
													}
													myChart3.update();
													ev_click1 = ! ev_click1;
													// alert(ev_click2) ;
													} else {
														$(".ul_2 li span[data_leg=0]").removeClass("legende_click");
														for (var i = 0; i < myChart3.data.datasets[0].data.length; i++) {
															myChart3.data.datasets[0].data[i] = tab_temp1[i];
														}

													myChart3.update();
													ev_click1 = ! ev_click1;

												}
											});
											$("#chart-legends_pax").on('click', "li span[data_leg=1]", function () {

												if (ev_click2 == false) {
													$(".ul_2 li span[data_leg=1]").addClass("legende_click");
													for (var i = 0; i < myChart3.data.datasets[1].data.length; i++) {
														myChart3.data.datasets[1].data[i] = 0;
													}
													myChart3.update();
													ev_click2 = ! ev_click2;
													// alert(ev_click2) ;
													} else {
														$(".ul_2 li span[data_leg=1]").removeClass("legende_click");
														for (var i = 0; i < myChart3.data.datasets[1].data.length; i++) {
															myChart3.data.datasets[1].data[i] = tab_temp2[i];
														}

													myChart3.update();
													ev_click2 = ! ev_click2;

												}
											});

										}, 1000)
									}
								}
							},
							error: function (error) {
								alert('erreur server au niveau de triage chart heb_to ' + pseudo_hotel)
							}
						})
				})

				$('#annee_kpi').on('change', function(){
						$("#element_canvas_KPI").empty();
						var annee = $('#annee_kpi').val();
						var data = {'data' : annee};
						$.ajax({
							url : "/profile/filtre/graph/kpi/"+pseudo_hotel,
							type : "POST",
							data : data,
							success : function(response){
								var my_data = response;
                                console.log(my_data);
								var my_data_adr = my_data.data_adr;
								var my_data_revp = my_data.data_revp;

								var souche_adr = {
										'0' : 0,
										'1' : 0,
										'2' : 0,
										'3' : 0,
										'4' : 0,
										'5' : 0,
										'6' : 0,
										'7' : 0,
										'8' : 0,
										'9' : 0,
										'10' : 0,
										'11' : 0
									}
									for (var item in my_data_adr) {
										souche_adr[item] = my_data_adr[item];
									}
									//console.log(souche);
									var souche2_adr  = [];
									for (var item in souche_adr) {
										souche2_adr.push(souche_adr[item]);
									}

									var souche_revp = {
										'0' : 0,
										'1' : 0,
										'2' : 0,
										'3' : 0,
										'4' : 0,
										'5' : 0,
										'6' : 0,
										'7' : 0,
										'8' : 0,
										'9' : 0,
										'10' : 0,
										'11' : 0
									}
									for (var item in my_data_revp) {
										souche_revp[item] = my_data_revp[item];
									}
									//console.log(souche);
									var souche2_revp  = [];
									for (var item in souche_revp) {
										souche2_revp.push(souche_revp[item]);
									}
									
									var max_adr = findArrayMax(souche2_adr);
									var max_revp = findArrayMax(souche2_revp);
									var ex = [max_adr, max_revp];
									var max_kpi = findArrayMax(ex);

                                var my_labels = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sept","Oct","Nov","Dec"];
                                var w = $(window).width();
								$("#element_canvas_KPI").html('<div><canvas id="canvas_KPI"></canvas></div><div id="chart-legends_KPI"></div>');
                                if (w <= 768) {
									if(max_kpi != 0){
										var myChart4 = create_chart4(create_ctx4(), create_config4(souche2_adr, souche2_revp, my_labels,  5*parseInt(portionner(max_kpi)) , portionner(max_kpi)));
									}
									else if(max_kpi == 0){
										var myChart4 = create_chart4(create_ctx4(), create_config4(souche2_adr, souche2_revp, my_labels, 100, 20));
									}
                                    myChart4.update();
                                    //add_resp_heb(myChart1, myChart2);
                                } else {
                                    if(max_kpi != 0){
										var myChart4 = create_chart4(create_ctx4(), create_config4(souche2_adr, souche2_revp, my_labels,  5*parseInt(portionner(max_kpi)) , portionner(max_kpi)));
									}
									else if(max_kpi == 0){
										var myChart4 = create_chart4(create_ctx4(), create_config4(souche2_adr, souche2_revp, my_labels, 100, 20));
									}
                                    myChart4.update();
                                }
							}, 
							error : function(error){
								alert('erreur server au niveau de triage stock '+pseudo_hotel)
							}
						})
					})
		})
	</script>


{% endblock %}

